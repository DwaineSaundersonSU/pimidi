policy-milter
=============

This milter provides a method of throttling or rejecting connections
based on either IP address or hostname. Criteria for throttling is
based on the number of connections per second made by a single
address or hostname.

Building
========

If an autoconf/automake environment is available, this is a standard:

./configure
make
sudo make install

See the output from
	./configure --help

for extra options that may be available.

If no auto* environment is available, the milter can be built by doing:

cd src
make -f Makefile.unix

and copying the policy-milter binary to the desired location.

Requirements
============

This milter requires libmilter and libpthread.

Usage
=====

	./policy-milter -s <socket> -p /path/to/policy_file &

where

<socket> is either inet:NNNN or local:/path/to/socket.file

For example: 

	./policy-milter -s inet:9876 -p /tmp/policies

will listen on port 9876 and read the policies from the
/tmp/policies file.

Note the trailing '&' character to put the process into
the background.

Also note that if a port < 1024 is required, the process must
be run as the root user.

Configuration
=============

The policy file has the following format:

[PATTERN] [ACTION] [LIMIT] [DURATION]

where

[PATTERN] can be one of the following:
	Trailing wildcard
	Leading wildcard
	Absolute string
	CIDR-style address

Trailing wildcard
-----------------

This is specified as:
	String*

meaning the IP address or hostname must begin with the string
to match with a policy rule.

Leading wildcard
----------------

This is specified as:
	*String

meaning the IP address or hostname must end with the string
to match with a policy rule.

Absolute string
---------------

This is specified as:
	String

meaning the IP address or hostname must match exactly with
a policy rule. The match is NOT case-sensitive.

CIDR-style address
------------------

This can be specifed as either:
	AAA.AAA.AAA.AAA/NN
or
	AAA.AAA.AAA.AAA/MMM.MMM.MMM.MMM

For example:
	192.168.0.0/24
or
	192.168.0.0/255.255.255.0

Any IP address that is part of the specified subnet will
match with the policy rule.

[ACTION] can be one of the following:
	A
	T
	R

where A is ACCEPT (220), T is TEMPFAIL (4xx) and R is REJECT (5xx).

[LIMIT] is the number of messages per second that can be accepted
by a matching connection
If you want to specify a longer interval than 1 second, the LIMIT
value would look like this:

LIMIT/INTERVAL

e.g. for 10 messages over 30 seconds, it would be:

10/30

[DURATION] is the number of seconds that must elapse once a limit
has been reached before the action is no longer effective.

Duration can be specified as follows:

NNN	where NNN is a fixed number of seconds to tempfail a connection.
?NNN	to specify a random number of seconds up to a maximum of NNN seconds.
R	to specify a relative duration to the interval, i.e. if the interval
	is 30 seconds and the limit is reached in 20, the duration will be 10
	seconds.

Example
-------

An example policy file would look like this:

# Accept all connection from 172.20.1.127
172.20.1.127	A

# Temp fail connections from 172.20.1.xxx
# for 300 seconds if 10 messages received
# within 1 second
172.20.1*	T	10	300

# Temp fail connections from 172.30.1.xxx
# for 300 seconds if 10 messages received
# within 30 seconds
172.30.1*	T	10/30	300

# Temp fail connections from 172.40.1.xxx
# for a random number of seconds up to 300
# seconds if 10 messages received within
# 30 seconds
172.40.1*	T	10/30	?300

# Temp fail connections from 172.50.1.xxx
# for a relative number of seconds if 10
# messages received within 30 seconds
172.50.1*	T	10/30	R

# Reject any connection from hosts ending
# in domain.com
*domain.com	R

Note that the order of the policies is important. The milter works on
a first-match basis. If Line 1 and Line 2 were switched, even a
connection from 172.20.1.127 will be tracked.

Updating the policy file
------------------------

If the policy file is updated, a SIGUSR1 signal can be sent to the
process to force a re-read of the file.

Changes to policies will not affect any items that are currently
in the tracking list.

Cleaning out the tempfail tracking list
---------------------------------------

If the tracking list needs to be cleaned out when, for example, a
change to a policy duration is made, a SIGUSR2 signal can be sent
to the process.

Background information
======================

When a connection is made, the milter will first check to see if the
IP address is already being tracked for tempfail.

If it is and the counter for that IP address has reached the limit
defined a policy, a 4xx return code is given.

If the IP address is being tracked but the counter hasn't reached the
limit, the counter is incremented.

If the IP address is NOT being tracked, a search is made through the
policies.

If a policy matches on either IP address or hostname, the appropriate
action is taken.

If the action is reject, a 5xx return code is given.
If the action is tempfail, a record is added to the tempfail tracking
list.
If the action is accept, a 220 return code is given.

Every 1 second, the tracking list is scanned to age out any records
based on the following criteria:

If an entry counter has reached the defined limit and the time between
now and the last update on the entry is more than the defined duration,
the entry is removed.

If an entry counter is less that the defined limit but the time between
now and the last update is > 1 second, the entry is removed.
